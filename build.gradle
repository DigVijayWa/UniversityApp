plugins {
	id 'org.springframework.boot' version '2.3.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id "com.github.node-gradle.node" version "2.2.4"
	id 'java'
}

group = 'com.university'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

node {
	// Version of node to use.
	version = '12.19.0'

	// Version of npm to use.
	npmVersion = '6.14.8'

	// Version of Yarn to use.
	yarnVersion = '0.16.1'

	// Override the install command used by npmInstall
	npmInstallCommand = 'install'

	// Base URL for fetching node distributions (change if you have a mirror).
	// Or set to null if you want to add the repository on your own.
	distBaseUrl = 'https://nodejs.org/dist'

	// If true, it will download node using above parameters.
	// If false, it will try to use globally installed node.
	download = true

	// Set the work directory for unpacking node
	workDir = file("${project.buildDir}/node")

	// Set the work directory for NPM
	npmWorkDir = file("${project.buildDir}/npm")

	// Set the work directory for Yarn
	yarnWorkDir = file("${project.buildDir}/yarn")

	// Set the work directory where node_modules should be located
	nodeModulesDir = file("${project.projectDir}")
}

task customBuild(type : NpmTask) {
	args = ['install']
}
task webpack(type: NpmTask) {
	args = ['run','watch']
}

webpack.dependsOn 'customBuild'


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	//testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}
